<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>The Perfume Co. - My Wallet</title>
    
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet">
    
    <!-- SweetAlert2 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11.10.1/dist/sweetalert2.min.css" rel="stylesheet">
    
    <!-- Font Awesome for icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
    
    <style>
        :root {
            --primary: #4361ee;
            --secondary: #3f37c9;
            --accent: #4895ef;
            --success: #4cc9f0;
            --danger: #f72585;
            --light: #f8f9fa;
            --dark: #212529;
            --gray: #6c757d;
        }
        
        body {
            background-color: #f0f2f5;
            font-family: 'Inter', sans-serif;
            min-height: 100vh;
        }

        .page-container {
            max-width: 1140px;
            margin: 0 auto;
            padding: 2rem 1rem;
        }

        .page-header {
            display: flex;
            align-items: center;
            justify-content: space-between;
            margin-bottom: 2rem;
        }

        .breadcrumb-wrapper {
            background-color: white;
            border-radius: 12px;
            padding: 0.75rem 1.5rem;
            box-shadow: 0 2px 6px rgba(0,0,0,0.05);
            margin-bottom: 2rem;
        }

        .breadcrumb {
            margin-bottom: 0;
        }

        .breadcrumb-item a {
            color: var(--primary);
            text-decoration: none;
            transition: color 0.2s;
        }

        .breadcrumb-item a:hover {
            color: var(--secondary);
        }

        .wallet-overview {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 1.5rem;
            margin-bottom: 2rem;
        }

        .balance-card {
            background: linear-gradient(135deg, var(--primary), var(--secondary));
            border-radius: 16px;
            padding: 2rem;
            color: white;
            box-shadow: 0 10px 25px rgba(67, 97, 238, 0.2);
            display: flex;
            flex-direction: column;
            justify-content: space-between;
            height: 100%;
            position: relative;
            overflow: hidden;
        }

        .balance-card::after {
            content: '';
            position: absolute;
            top: -50%;
            right: -50%;
            width: 100%;
            height: 100%;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 50%;
        }

        .balance-label {
            font-size: 1.1rem;
            opacity: 0.9;
            margin-bottom: 0.5rem;
        }

        .balance-amount {
            font-size: 2.5rem;
            font-weight: 700;
            margin-bottom: 1.5rem;
        }

        .stats-card {
            background-color: white;
            border-radius: 16px;
            padding: 2rem;
            box-shadow: 0 10px 25px rgba(0,0,0,0.05);
        }

        .stats-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1.5rem;
        }

        .stats-title {
            font-size: 1.25rem;
            font-weight: 600;
            color: var(--dark);
            margin: 0;
        }

        .stats-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 1.5rem;
        }

        .stat-item {
            padding: 1rem;
            border-radius: 12px;
            background-color: #f8f9fa;
        }

        .stat-label {
            font-size: 0.9rem;
            color: var(--gray);
            margin-bottom: 0.5rem;
        }

        .stat-value {
            font-size: 1.5rem;
            font-weight: 600;
            color: var(--dark);
        }

        .positive {
            color: var(--success);
        }

        .negative {
            color: var(--danger);
        }

        .transactions-card {
            background-color: white;
            border-radius: 16px;
            overflow: hidden;
            box-shadow: 0 10px 25px rgba(0,0,0,0.05);
        }

        .transactions-header {
            padding: 1.5rem 2rem;
            border-bottom: 1px solid rgba(0,0,0,0.05);
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .transactions-title {
            font-size: 1.25rem;
            font-weight: 600;
            color: var(--dark);
            margin: 0;
        }

        .transactions-filter {
            display: flex;
            align-items: center;
            gap: 0.75rem;
        }

        .filter-btn {
            background: none;
            border: none;
            font-size: 0.9rem;
            color: var(--gray);
            cursor: pointer;
            transition: color 0.2s;
            padding: 0.5rem 1rem;
            border-radius: 20px;
        }

        .filter-btn:hover, .filter-btn.active {
            color: var(--primary);
            background-color: rgba(67, 97, 238, 0.1);
        }

        .transactions-table {
            width: 100%;
        }

        .transactions-table th {
            padding: 1.25rem 2rem;
            color: var(--gray);
            font-weight: 600;
            font-size: 0.9rem;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            border-bottom: 1px solid rgba(0,0,0,0.05);
        }

        .transactions-table td {
            padding: 1rem 2rem;
            vertical-align: middle;
            border-bottom: 1px solid rgba(0,0,0,0.05);
        }

        .transactions-table tr:last-child td {
            border-bottom: none;
        }

        .status-badge {
            display: inline-block;
            padding: 0.5rem 1rem;
            border-radius: 20px;
            font-size: 0.85rem;
            font-weight: 500;
        }

        .status-success {
            background-color: rgba(76, 201, 240, 0.1);
            color: var(--success);
        }

        .status-debit {
            background-color: rgba(247, 37, 133, 0.1);
            color: var(--danger);
        }

        .add-money-btn {
            background-color: white;
            color: var(--primary);
            border: none;
            padding: 0.875rem 1.5rem;
            border-radius: 12px;
            font-weight: 600;
            font-size: 1rem;
            transition: all 0.3s;
            box-shadow: 0 4px 10px rgba(0,0,0,0.05);
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .add-money-btn:hover {
            background-color: #f8f9fa;
            transform: translateY(-2px);
            box-shadow: 0 6px 15px rgba(0,0,0,0.08);
        }

        .quick-actions {
            display: flex;
            gap: 1rem;
            margin-top: 1.5rem;
        }

        .modal-content {
            border-radius: 16px;
            border: none;
            box-shadow: 0 25px 50px rgba(0,0,0,0.1);
        }

        .modal-header {
            padding: 1.5rem 2rem;
            border-bottom: 1px solid rgba(0,0,0,0.05);
        }

        .modal-body {
            padding: 2rem;
        }

        .form-control {
            padding: 0.875rem 1.25rem;
            border-radius: 12px;
            border: 1px solid rgba(0,0,0,0.1);
            font-size: 1rem;
            transition: all 0.2s;
        }

        .form-control:focus {
            box-shadow: 0 0 0 4px rgba(67, 97, 238, 0.15);
            border-color: var(--primary);
        }

        .btn-primary {
            background-color: var(--primary);
            border-color: var(--primary);
            border-radius: 12px;
            padding: 0.875rem 1.5rem;
            font-weight: 600;
            transition: all 0.2s;
        }

        .btn-primary:hover {
            background-color: var(--secondary);
            border-color: var(--secondary);
            transform: translateY(-2px);
            box-shadow: 0 6px 15px rgba(67, 97, 238, 0.2);
        }

        @media (max-width: 992px) {
            .wallet-overview {
                grid-template-columns: 1fr;
            }
        }

        @media (max-width: 768px) {
            .stats-grid {
                grid-template-columns: 1fr;
            }
            
            .transactions-header {
                flex-direction: column;
                align-items: flex-start;
                gap: 1rem;
            }
            
            .transactions-filter {
                width: 100%;
                overflow-x: auto;
                padding-bottom: 0.5rem;
            }

            .transactions-table th, 
            .transactions-table td {
                padding: 1rem;
            }
        }

        @media (max-width: 576px) {
            .table-responsive {
                display: block;
                width: 100%;
                overflow-x: auto;
            }
        }
    </style>
    <%- include('../../views/partials/user/header') %>
</head>
<body>
    <div class="page-container">
        <div class="breadcrumb-wrapper">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb mb-0">
                    <li class="breadcrumb-item"><a href="/profile"><i class="fas fa-user me-2"></i>Profile</a></li>
                    <li class="breadcrumb-item active" aria-current="page"><i class="fas fa-wallet me-2"></i>Wallet</li>
                </ol>
            </nav>
        </div>

        <div class="page-header">
            <div>
                <h2 style="font-weight: 700; margin-bottom: 0.5rem;">My Wallet</h2>
                <p class="text-muted mb-0">Manage your funds and track transactions</p>
            </div>
        </div>
        
        <div class="wallet-overview">
            <div class="balance-card">
                <div>
                    <h6 class="balance-label">Current Balance</h6>
                    <h3 class="balance-amount">₹<%= wallet.balance.toFixed(2) %></h3>
                </div>
                <div class="quick-actions">
                    <button id="addMoneyBtn" class="add-money-btn" data-bs-toggle="modal" data-bs-target="#addMoneyModal">
                        <i class="fas fa-plus"></i> Add Money
                    </button>
                </div>
            </div>
            
            <div class="stats-card">
                <div class="stats-header">
                    <h5 class="stats-title">Financial Summary</h5>
                </div>
                <div class="stats-grid">
                    <div class="stat-item">
                        <div class="stat-label">
                            <i class="fas fa-arrow-up me-1"></i> Income
                        </div>
                        <div class="stat-value positive">
                            ₹<%= transactions.filter(t => t.type === 'credit').reduce((sum, t) => sum + t.amount, 0).toFixed(2) %>
                        </div>
                    </div>
                    <div class="stat-item">
                        <div class="stat-label">
                            <i class="fas fa-arrow-down me-1"></i> Expenses
                        </div>
                        <div class="stat-value negative">
                            ₹<%= transactions.filter(t => t.type === 'debit').reduce((sum, t) => sum + t.amount, 0).toFixed(2) %>
                        </div>
                    </div>
                    <div class="stat-item">
                        <div class="stat-label">
                            <i class="fas fa-calendar me-1"></i> Transactions
                        </div>
                        <div class="stat-value">
                            <%= transactions.length %>
                        </div>
                    </div>
                    <div class="stat-item">
                        <div class="stat-label">
                            <i class="fas fa-calendar-day me-1"></i> Last Activity
                        </div>
                        <div class="stat-value" style="font-size: 1rem;">
                            <%= transactions.length > 0 ? new Date(transactions[0].date).toLocaleDateString() : 'No activity' %>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="transactions-card">
            <div class="transactions-header">
                <h5 class="transactions-title">
                    <i class="fas fa-history me-2"></i>Transaction History
                </h5>
                <div class="transactions-filter">
                    <button class="filter-btn active">All</button>
                    <button class="filter-btn">Credits</button>
                    <button class="filter-btn">Debits</button>
                </div>
            </div>
            <div class="table-responsive">
                <table class="transactions-table">
                    <thead>
                        <tr>
                            <th>Date</th>
                            <th>Description</th>
                            <th>Amount</th>
                            <th>Status</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% transactions.forEach(transaction => { %>
                            <tr>
                                <td><%= new Date(transaction.date).toLocaleDateString() %></td>
                                <td><%= transaction.description %></td>
                                <td class="<%= transaction.type === 'credit' ? 'positive' : 'negative' %> fw-bold">
                                    <%= transaction.type === 'credit' ? '+' : '-' %>₹<%= transaction.amount.toFixed(2) %>
                                </td>
                                <td>
                                    <span class="status-badge <%= transaction.type === 'credit' ? 'status-success' : 'status-debit' %>">
                                        <%= transaction.type === 'credit' ? 'Success' : 'Debit' %>
                                    </span>
                                </td>
                            </tr>
                        <% }); %>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    
    <!-- Add Money Modal -->
    <div class="modal fade" id="addMoneyModal" tabindex="-1" aria-labelledby="addMoneyModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="addMoneyModalLabel">Add Money to Wallet</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="addMoneyForm">
                        <div class="mb-3">
                            <label for="amount" class="form-label">Amount (₹)</label>
                            <input type="number" class="form-control" id="amount" name="amount" placeholder="Enter amount" required>
                        </div>
                        <button type="submit" class="btn btn-primary w-100">Proceed to Pay</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.10.1/dist/sweetalert2.all.min.js"></script>
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    
    <script>
        document.getElementById('addMoneyForm').addEventListener('submit', async function(e) {
          e.preventDefault();
          
          const amount = document.getElementById('amount').value;
          
          if (amount < 1) {
            Swal.fire({
              icon: 'error',
              title: 'Invalid Amount',
              text: 'Please enter an amount greater than ₹0'
            });
            return;
          }
          
          try {
            // Step 1: Create order
            const orderResponse = await fetch('/wallet/add-money', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({ amount })
            });
            
            const orderData = await orderResponse.json();
            
            if (!orderData.success) {
              throw new Error(orderData.error || 'Failed to create order');
            }
            
            // Step 2: Initialize Razorpay
            const options = {
              key: orderData.keyId,
              amount: orderData.order.amount,
              currency: orderData.order.currency,
              name: 'The Perfume Co.',
              description: 'Wallet Recharge',
              order_id: orderData.order.id,
              handler: async function(response) {
                // Step 3: Verify payment
                const verifyResponse = await fetch('/wallet/verify-payment', {
                  method: 'POST',
                  headers: {
                    'Content-Type': 'application/json'
                  },
                  body: JSON.stringify({
                    razorpay_order_id: response.razorpay_order_id,
                    razorpay_payment_id: response.razorpay_payment_id,
                    razorpay_signature: response.razorpay_signature
                  })
                });
                
                const verifyData = await verifyResponse.json();
                
                if (verifyData.success) {
                  Swal.fire({
                    icon: 'success',
                    title: 'Payment Successful',
                    text: `₹${amount} has been added to your wallet`,
                    confirmButtonText: 'OK'
                  }).then(() => {
                    window.location.reload();
                  });
                } else {
                  throw new Error('Payment verification failed');
                }
              },
              // Make sure you have these details available or remove them
              prefill: {
                name: '<%= typeof user.name !== "undefined" ? user.name : "" %>',
                email: '<%= typeof user.email !== "undefined" ? user.email : "" %>'
              },
              theme: {
                color: '#4361ee'
              },
              modal: {
                ondismiss: function() {
                  console.log('Payment cancelled');
                }
              }
            };
            
            const razorpayInstance = new Razorpay(options);
            razorpayInstance.open();
            
            // Close the modal
            bootstrap.Modal.getInstance(document.getElementById('addMoneyModal')).hide();
          } catch (error) {
            console.error('Error:', error);
            Swal.fire({
              icon: 'error',
              title: 'Oops...',
              text: error.message || 'Something went wrong!'
            });
          }
        });
        
        // Filter buttons functionality
        document.querySelectorAll('.filter-btn').forEach(button => {
          button.addEventListener('click', function() {
            // Remove active class from all buttons
            document.querySelectorAll('.filter-btn').forEach(btn => {
              btn.classList.remove('active');
            });
            
            // Add active class to clicked button
            this.classList.add('active');
            
            // Get filter type
            const filterType = this.textContent.trim().toLowerCase();
            
            // Get all transaction rows
            const rows = document.querySelectorAll('.transactions-table tbody tr');
            
            // Filter rows based on selection
            rows.forEach(row => {
              const statusCell = row.querySelector('td:nth-child(4) .status-badge');
              const statusText = statusCell.textContent.trim().toLowerCase();
              
              if (filterType === 'all') {
                row.style.display = '';
              } else if (filterType === 'credits' && statusText === 'success') {
                row.style.display = '';
              } else if (filterType === 'debits' && statusText === 'debit') {
                row.style.display = '';
              } else {
                row.style.display = 'none';
              }
            });
          });
        });
    </script>
</body>
</html>