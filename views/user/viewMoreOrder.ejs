<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Order Details</title>
    <!-- Bootstrap CSS CDN -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
    <%- include('../../views/partials/user/header') %>
    <style>
        .order-details {
            max-width: 1000px;
            margin: 0 auto;
        }
        .product-image {
            width: 100px;
            height: 100px;
            object-fit: cover;
        }
        .order-status {
            font-size: 1.1rem;
            font-weight: 600;
        }
        .order-summary {
            background-color: #f8f9fa;
            border-radius: 5px;
            padding: 20px;
        }
        .summary-item {
            display: flex;
            justify-content: space-between;
            padding: 8px 0;
        }
        .summary-total {
            font-weight: bold;
            border-top: 1px solid #dee2e6;
            padding-top: 15px;
            margin-top: 10px;
        }
    </style>
</head>
<body>


    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <div class="container my-5">
        <div class="order-details">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2>Order Details</h2>
                <span class="order-id">#<%= order._id %></span>

            </div>

            <!-- Order Status and Actions -->
            <div class="card mb-4">
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <h5>Order Status</h5>
                           
                            <p>Order Date: <%= order.Date %></p>

                        </div>
                        <div class="col-md-6 text-md-end">
                           
                        </div>
                    </div>
                </div>
            </div>

            <!-- Shipping Address -->
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="mb-0">Shipping Address</h5>
                </div>
                <div class="card-body">
                    <p><%= order.address.fullName %></p>
                    <p><%= order.address.phone %></p>
                    <p><%= order.address.city %></p>
                    <p><%= order.address.street %></p>
                    <p><%= order.address.state %></p>
                    <p><%= order.address.zipcode %></p>

                </div>
            </div>
            <input type="hidden" value="<%= order._id %>" id="orderId">

            <!-- Order Items -->
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="mb-0">Order Items</h5>
                </div>
                <div class="card-body p-0">
                    <div class="table-responsive">
                        <table class="table table-borderless mb-0">
                            <thead class="bg-light">
                                <tr>
                                    <th scope="col">Product</th>
                                    <th scope="col">Details</th>
                                    <th scope="col" class="text-center">Quantity</th>
                                    <th scope="col" class="text-end"> Price</th>
                                    <!-- <th scope="col" class="text-end">Offer Price</th> -->
                                    <th scope="col" class="text-end">Total</th>
                                    <th>action</th>
                                    <th>Status</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% if (order && order.orderItems && order.orderItems.length > 0) { %>
                                    <% order.orderItems.forEach(item => { %>
                                
                                        <tr>
                                            <td>
                                                <img src="/uploads/re-images/<%= item.productImage %>" alt="" class="product-image">
                                            </td>
                                            <td><h6 class="mb-0"><%= item.productName %></h6></td>
                                            <td class="text-center"><%= item.quantity %></td>
                                            <td class="text-end">₹ <%= item.price %></td>
                                            <!-- <td class="text-end">₹ <%= item.offerPrice %></td> -->
                                            <td class="text-end">₹ <%= item.quantity * item.price %></td>
                                            <td> 
                                                <% if (item.orderStatus.toLowerCase() === 'cancelled') { %>
                                                    <button class="btn btn-secondary" disabled>Cancelled</button>
                                                <% } else if (item.orderStatus.toLowerCase() === 'delivered') { %>
                                                    <button class="btn btn-warning returnOrder" 
                                                            data-product-id="<%= item._id %>" 
                                                            data-order-id="<%= order._id %>">
                                                        Return
                                                    </button>
                                                    <div class="return-form" id="return-form-<%= item._id %>" style="display: none;">
                                                        <textarea class="form-control returnReason" placeholder="Enter return reason" required></textarea>
                                                        <button class="btn btn-primary submitReturn" 
                                                                data-product-id="<%= item._id %>" 
                                                                data-order-id="<%= order._id %>">
                                                            Submit
                                                        </button>
                                                    </div>
                                                <% } else if (item.orderStatus.toLowerCase() === 'return request') { %>
                                                    <span class="text-primary">Return Request Processing</span>
                                                    <p><strong>Return Reason:</strong> <%= item.returnReason ? item.returnReason : 'No reason provided' %></p> 
                                                <% } else if (item.orderStatus.toLowerCase() === 'returned') { %>
                                                    <span class="text-success">Returned</span>
                                                <% } else if (item.orderStatus.toLowerCase() === 'return denied') { %>
                                                    <span class="text-danger">Return Denied</span>
                                                <% } else { %>
                                                    <button class="btn btn-danger cancelOrder" 
                                                            data-product-id="<%= item._id %>" 
                                                            data-order-id="<%= order._id %>">
                                                        Cancel
                                                    </button>
                                                <% } %>
                                            </td>
                                             
                                            <td>
                                                <span class="status-badge status-<%= item.orderStatus.toLowerCase().replace(' ', '-') %>">
                                                    <%= item.orderStatus %>
                                                </span>
                                            </td>
                                        </tr>
                                    <% }) %>
                                <% } else { %>
                                    <tr>
                                        <td colspan="7" class="text-center">No order items found.</td>
                                    </tr>
                                <% } %>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>

            <!-- Order Summary -->
            <div class="row">
                <div class="col-md-6 ms-auto">
                    <div class="order-summary">
                        <h4 class="mb-4">Order Summary</h4>
                        
                        <!-- Subtotal -->
                        <div class="summary-row">
                            <span>Subtotal</span>
                            <span>₹ <%= Totalprice %></span>
                        </div>
                    
                        <!-- Offer Discount -->
                        <% if (order.totalOfferDiscount > 0) { %>
                            <div class="summary-row">
                                <span>Offer Discount</span>
                                <span>-₹ <%= order.totalOfferDiscount %></span>
                            </div>
                        <% } %>
                    
                        <!-- Coupon Discount -->
                        <% if (order.couponApplied) { %>
                            <div class="summary-row">
                                <span>Coupon Discount (Code: <%= order.couponCode %>)</span>
                                <span>-₹ <%= order.discount %></span>
                            </div>
                        <% } %>
                    
                        <!-- Shipping -->
                        <div class="summary-row">
                            <span>Shipping</span>
                            <span>Free</span>
                        </div>
                    
                        <!-- Final Total -->
                        <div class="summary-row total-row">
                            <span>Total</span>
                            <span>₹ <%= order.finalAmount %></span>
                        </div>
                    </div>
                    
                </div>
            </div>


            <!-- Add this before the download invoice button to disable it for Payment failed status -->
<button onclick="downloadInvoice('<%= order.orderId %>')" 
    class="btn btn-primary" 
    <%= order.orderItems.some(item => item.orderStatus === 'Payment failed') ? 'disabled' : '' %>>
<i class="bi bi-download me-2"></i>Download Invoice
</button>

<% if (order.paymentMethod === 'razorpay' && order.orderItems.some(item => item.orderStatus === 'Payment failed')) { %>
    <button class="btn btn-success payNow" 
            data-order-id="<%= order._id %>" 
            data-amount="<%= order.finalAmount %>">
        Pay Now
    </button>
<% } %>

            <!-- Back Button -->
            <div class="mt-4">
                <a href="/orders" class="btn btn-outline-primary">Back to Orders</a>
            </div>
        </div>
    </div>

    <!-- Bootstrap JS Bundle with Popper -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>

    


<script>
document.addEventListener('click', async (event) => {
    if (event.target.classList.contains('cancelOrder')) {
        const button = event.target;
        const productId = button.dataset.productId;
        const orderId = button.dataset.orderId;
        
        try {
            const response = await fetch("/cancelOrder", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ orderId, productId })
            });

            const data = await response.json();

            if (data.success) {
                // Disable the button and update text
                button.textContent = "Cancelled";
                button.classList.remove('btn-danger');
                button.classList.add('btn-secondary');
                button.disabled = true;

                // Update order status dynamically
                const statusElement = button.closest('tr').querySelector('.status-badge');
                if (statusElement) {
                    statusElement.textContent = "Cancelled";
                    statusElement.classList.remove('status-pending', 'status-processing', 'status-delivered');
                    statusElement.classList.add('status-cancelled');
                }
            } else {
                alert(data.message || "Failed to cancel order.");
            }
        } catch (error) {
            console.error("Error cancelling order:", error);
            alert("Something went wrong. Please try again.");
        }
    }
});


</script>


   
        <script>
            document.addEventListener('click', (event) => {
                if (event.target.classList.contains('returnOrder')) {
                    const productId = event.target.dataset.productId;
                    document.getElementById(`return-form-${productId}`).style.display = 'block';
                }
            });
            
            document.addEventListener('click', async (event) => {
                if (event.target.classList.contains('submitReturn')) {
                    const productId = event.target.dataset.productId;
                    const orderId = event.target.dataset.orderId;
                    const reasonInput = document.querySelector(`#return-form-${productId} .returnReason`);
                    const reason = reasonInput.value.trim();
            
                    if (!reason) {
                        alert("Please enter a reason for return.");
                        return;
                    }
            
                    try {
                        const response = await fetch("/returnOrder", {
                            method: "POST",
                            headers: { "Content-Type": "application/json" },
                            body: JSON.stringify({ orderId, productId, returnReason: reason })
                        });
            
                        const data = await response.json();
            
                        if (data.success) {
                            alert("Return request submitted successfully!");
                            location.reload();
                        } else {
                            alert(data.message || "Failed to process return.");
                        }
                    } catch (error) {
                        console.error("Error processing return:", error);
                        alert("Something went wrong. Please try again.");
                    }
                }
            });
          
            



function downloadInvoice(orderId) {
  const btn = event.target.closest('button');
  const originalText = btn.innerHTML;
  btn.innerHTML = '<i class="bi bi-hourglass-split me-2"></i>Generating...';
  btn.disabled = true;
  
  try {
    window.location.href = `/order/download-invoice/${orderId}`;
    // Reset button after a delay
    setTimeout(() => {
      btn.innerHTML = originalText;
      btn.disabled = false;
    }, 3000);
  } catch (error) {
    console.error('Error downloading invoice:', error);
    alert('Failed to download invoice. Please try again later.');
    btn.innerHTML = originalText;
    btn.disabled = false;
  }
}



// function downloadInvoice(orderId) {
//   window.location.href = `/order/download-invoice/${orderId}`;
// }


</script>



<script>
    document.addEventListener('click', async (event) => {
        if (event.target.classList.contains('payNow')) {
            const button = event.target;
            const orderId = button.dataset.orderId;
            const amount = button.dataset.amount;

            try {
                const response = await fetch('/initiate-payment', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ orderId, amount })
                });
                const data = await response.json();

                if (!data.success) {
                    alert(data.message || 'Failed to initiate payment');
                    return;
                }

                const options = {
                    key: '<%= razorpayKeyId %>', // This should now work
                    amount: data.amount,
                    currency: 'INR',
                    name: 'The Perfume Co.',
                    description: `Payment for Order #${orderId}`,
                    order_id: data.razorpayOrderId,
                    handler: async function (response) {
                        const verifyResponse = await fetch('/verify-payment', {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({
                                orderId,
                                razorpay_payment_id: response.razorpay_payment_id,
                                razorpay_order_id: response.razorpay_order_id,
                                razorpay_signature: response.razorpay_signature
                            })
                        });
                        const verifyData = await verifyResponse.json();

                        if (verifyData.success) {
                            alert('Payment successful! Order status updated to Processing.');
                            location.reload();
                        } else {
                            alert('Payment verification failed.');
                        }
                    },
                    prefill: {
                        name: '<%= order.address.fullName %>',
                        email: '<%= userEmail %>',
                        contact: '<%= order.address.phone %>'
                    },
                    theme: {
                        color: '#28a745'
                    }
                };

                const rzp = new Razorpay(options);
                rzp.open();
            } catch (error) {
                console.error('Error initiating payment:', error);
                alert('Something went wrong. Please try again.');
            }
        }
    });
</script>
    
</body>
</html>